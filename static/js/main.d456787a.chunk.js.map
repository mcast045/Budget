{"version":3,"sources":["Components/header.js","Components/Home.js","Redux/actions/index.js","Redux/constants/index.js","Pages/SetUpPage.js","Components/chart.js","Pages/ChartsPage.js","Components/bills.js","Pages/SetmeUpBillsPage.js","Components/Table/tableBtn.js","Components/Table/goalTable.js","Components/Table/Table.js","Pages/TablesPage.js","Components/goals.js","Pages/Goalpage.js","App.js","Redux/reducers/index.js","index.js"],"names":["withRouter","props","activeUser","useSelector","state","fullNavBar","className","role","to","type","billCost","length","goalCost","renderLinks","initialState","name","monthlyIncome","dispatch","useDispatch","useState","setState","onChange","e","target","value","onSubmit","preventDefault","user","id","uniqid","billTitle","goalTitle","newUser","addUser","history","push","disabled","SetUpPage","Chart","savings","chartColors","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","savingCalculator","spending","income","reduce","a","b","savingsVerification","payments","goalCostRedce","monthlyBreakdownBills","labels","datasets","label","data","backgroundColor","monthlyBreakdownGoals","savingsData","billCostRedce","goalData","goalLabel","width","height","options","title","display","text","fontSize","legend","position","ChartsPage","activeUserId","anotherBill","cost","onClick","SetMeUpBillsPage","GoalTable","updateUserGoal","updateGoal","disableSave","setDisableSave","initialGoalState","index","useEffect","onGoalChange","numVerification","hide","setHide","disable","setDisable","upperCaseName","scope","map","key","editGoal","style","marginLeft","UserId","goalTitleIndex","color","placeholder","goal","isNaN","trim","SetUpTable","updateUserBill","updateBill","initialStateBill","onBillChange","str","toLowerCase","split","s","toUpperCase","slice","join","editBill","billTitleIndex","bill","BillTablesPage","anotherGoal","GoalPage","App","exact","path","component","SetUpPages","Bills","Table","Goals","users","updateUserBills","copy","findIndex","x","toFixed","updateUserGoals","userGoalCopy","rootReducer","action","usersCopy","JSON","parse","stringify","splice","updateBillCopy","usersDeleteGoalCopy","updateGoalCopy","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d456787a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const activeUser = useSelector(state => state.activeUser);\r\n\r\n  //Only return full navbar if there is data currently in the state \r\n  const fullNavBar =\r\n    (<ul className=\"nav navbar-nav\">\r\n      <li role=\"presentation\">\r\n        <Link to=\"/setmeupbills\">Payments</Link>\r\n      </li>\r\n      <li role=\"presentation\">\r\n        <Link to=\"/table\">Table</Link>\r\n      </li>\r\n      <li role=\"presentation\">\r\n        <Link to=\"/setmeupgoals\">Goals</Link>\r\n      </li>\r\n      <li role=\"presentation\">\r\n        <Link to=\"/myCharts\">Charts</Link>\r\n      </li>\r\n    </ul>)\r\n\r\n\r\n  const renderLinks = () => {\r\n    const { type } = props;\r\n    if (type === \"set_me_up\") {\r\n      return (\r\n        <ul className=\"nav navbar-nav\">\r\n          <li role=\"presentation\">\r\n            <Link to=\"/\">Set Up</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else if (type === \"bills\") {\r\n      if (activeUser.billCost.length === 0) {\r\n        return (\r\n          <ul className=\"nav navbar-nav\">\r\n            <li role=\"presentation\">\r\n              <Link to=\"/setmeupbills\">\r\n                Payments\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n      else {\r\n        return (fullNavBar);\r\n      }\r\n\r\n    } else if (type === \"goals\") {\r\n      if (activeUser.goalCost.length === 0) {\r\n        return (\r\n          <ul className=\"nav navbar-nav\">\r\n            <li role=\"presentation\">\r\n              <Link to=\"/setmeupgoals\">Goals</Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n      }\r\n      else{\r\n        return(fullNavBar);\r\n      }\r\n    } else if (type === \"charts\") {\r\n      return (\r\n        <ul className=\"nav navbar-nav\">\r\n          <li role=\"presentation\">\r\n            <Link to=\"/setmeupbills\">Payments</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/table\">Table</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/setmeupgoals\">Goals</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/myCharts\">Charts</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else if (type === \"bill_table\") {\r\n      return (\r\n        <ul className=\"nav navbar-nav\">\r\n          <li role=\"presentation\">\r\n            <Link to=\"/setmeupbills\">Payments</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/table\">Table</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/setmeupgoals\">Goals</Link>\r\n          </li>\r\n          <li role=\"presentation\">\r\n            <Link to=\"/myCharts\">Charts</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-inverse\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <span className=\"navbar-brand\">Buget</span>\r\n        </div>\r\n        {renderLinks()}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport uniqid from \"uniqid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { addUser } from \"../Redux/actions\";\r\n\r\nconst Home = props => {\r\n  const initialState = {\r\n    name: \"\",\r\n    monthlyIncome: \"\"\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const onChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    let user = {\r\n      id: uniqid(),\r\n      name: state.name,\r\n      monthlyIncome: +state.monthlyIncome,\r\n      // savings: null,\r\n      billTitle: [],\r\n      billCost: [],\r\n      goalCost: [],\r\n      goalTitle: []\r\n    };\r\n    dispatch(addUser(user));\r\n    setState(initialState);\r\n    props.history.push(\"/setmeupbills\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Your Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"usr\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Monthly income: <span className=\"sideNotes\">(take home pay)</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            name=\"monthlyIncome\"\r\n            value={state.monthlyIncome}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg\"\r\n            id=\"btnSub\"\r\n            disabled={state.monthlyIncome === \"\" || state.name === \"\"} //disable until last form is filled\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);","import {\r\n  ADD_USER,\r\n  FETCH_USER,\r\n  EDIT_BILL,\r\n  DELETE_BILL,\r\n  ADD_PAYMENT,\r\n  UPDATE_BILL,\r\n  USER_GOALS,\r\n  DELETE_GOAL,\r\n  EDIT_GOAL,\r\n  UPDATE_GOAL\r\n} from \"../constants\";\r\nimport uniqid from \"uniqid\";\r\n\r\nexport const addUser = user => ({\r\n  type: ADD_USER,\r\n  newUser: { id: uniqid(), ...user }\r\n});\r\n\r\nexport const addPayment = (id, title, cost) => ({\r\n  type: ADD_PAYMENT,\r\n  id,\r\n  title,\r\n  cost\r\n});\r\n\r\nexport const fetchUser = id => ({\r\n  type: FETCH_USER,\r\n  UserId: id\r\n});\r\n\r\nexport const editBill = (title, cost, index) => ({\r\n  type: EDIT_BILL,\r\n  title,\r\n  cost,\r\n  index\r\n});\r\n\r\nexport const updateBill = (bill, id) => ({\r\n  type: UPDATE_BILL,\r\n  bill,\r\n  UserId: id\r\n});\r\n\r\nexport const deleteBill = (id, billTitleIndex) => ({\r\n  type: DELETE_BILL,\r\n  UserId: id,\r\n  billTitleIndex\r\n});\r\n\r\nexport const addGoals = (title, cost, id) => ({\r\n  type: USER_GOALS,\r\n  title,\r\n  cost,\r\n  id\r\n});\r\n\r\nexport const deleteGoal = (id, goalTitleIndex) => ({\r\n  type: DELETE_GOAL,\r\n  UserId: id,\r\n  goalTitleIndex\r\n});\r\n\r\n\r\nexport const editGoal = (title, cost, index) => ({\r\n  type: EDIT_GOAL,\r\n  title,\r\n  cost,\r\n  index\r\n});\r\n\r\n\r\nexport const updateGoal = (goal, id) => ({\r\n  type: UPDATE_GOAL,\r\n  goal,\r\n  UserId: id\r\n});","export const ADD_USER = 'ADD_USER';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const EDIT_BILL = 'EDIT_BILL';\r\nexport const DELETE_BILL = 'DELETE_BILL';\r\nexport const ADD_PAYMENT = 'ADD_PAYMENT';\r\nexport const UPDATE_BILL = 'UPDATE_BILL';\r\nexport const USER_GOALS = 'USER_GOALS';\r\nexport const DELETE_GOAL = 'DELETE_GOAL';\r\nexport const EDIT_GOAL = 'EDIT_GOAL';\r\nexport const UPDATE_GOAL = 'UPDATE_GOAL';","import React from 'react';\r\nimport Header from '../Components/header';\r\nimport SetMeUp from '../Components/Home'\r\n\r\nconst SetUpPage = () => {\r\n    return (\r\n        <div>\r\n            <Header type=\"set_me_up\" />\r\n            <SetMeUp />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SetUpPage;","import React, { Fragment } from \"react\";\r\nimport { Doughnut, Pie } from \"react-chartjs-2\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Chart = () => {\r\n\r\n  const activeUser = useSelector(state => state.activeUser);\r\n\r\n  let chartColors = [\r\n    \"rgba(0, 99,132, 0.4)\",\r\n    \"rgba(255, 132 ,132, 0.5)\",\r\n    \"rgba(132, 99,132, 0.6)\",\r\n    \"rgba(174, 4, 100, 0.4)\",\r\n    \"rgba(53, 23,13, 0.4)\",\r\n    \"rgba(143, 255,132, 0.3)\",\r\n    \"rgba(255, 99, 132, 0.7)\",\r\n    \"rgba(54, 162, 235, 0.4)\",\r\n    \"rgba(255, 206, 86, 0.7)\",\r\n    \"rgba(75, 192, 192, 0.6)\",\r\n    \"rgba(153, 102, 255, 0.5)\",\r\n    \"rgba(255, 159, 64, 0.5)\",\r\n    \"rgba(84, 162, 111, 0.7)\",\r\n    \"rgba(0, 162, 0, 0.5)\",\r\n    \"rgba(254, 87, 111, 0.5)\",\r\n    \"rgba(255, 187, 11, 0.9)\",\r\n    \"rgba(255, 0, 255, 0.6)\",\r\n    \"rgba(32, 34, 1, 0.5)\",\r\n    \"rgba(8, 24, 0, 0.5)\",\r\n    \"rgba(88, 44, 194, 0.4)\"\r\n  ];\r\n\r\n\r\n  //Shuffle array elements\r\n  const shuffleArray = array => {\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  //Calculate monthly savings\r\n  const savingCalculator = (spending, income) => {\r\n    if (activeUser.billCost.length !== 0 && activeUser.goalCost.length !== 0) {\r\n      let totalMonthlyExpenses = spending.reduce((a, b) => a + b);\r\n      let monthlySavings = income - totalMonthlyExpenses;\r\n      return monthlySavings;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  //If user has negative savings, then Doughnut chart will not show negative value\r\n  const savingsVerification = (payments) => {\r\n    if (savingCalculator(activeUser.billCost, activeUser.monthlyIncome) > 0) {\r\n      return [savingCalculator(activeUser.billCost, activeUser.monthlyIncome), payments]\r\n    } else {\r\n      return [payments]\r\n    }\r\n  }\r\n\r\n\r\n  //If user has no savings, then Doughnut chart will not show savings label\r\n  const savingsLabel = (savings) => {\r\n    if (savings <= 0) {\r\n      return [\"Total Monthly Payments\"]\r\n    } else {\r\n      return [\"Savings\", \"Total Monthly Payments\"]\r\n    }\r\n  }\r\n\r\n  //If user has no savings, then Doughnut chart will not show savings label\r\n  const goalLabel = () => {\r\n    if (activeUser.goalCost.length !== 0) {\r\n      if (goalCostRedce() <= 0) {\r\n        return [\"Goal Expense Total\"]\r\n      } else {\r\n        return [\"Savings\", \"Goal Expense Total\"]\r\n      }\r\n    }\r\n  }\r\n\r\n  const goalCostRedce = () => {\r\n    if (activeUser.goalCost.length !== 0) {\r\n      return activeUser.goalCost.reduce((a, b) => a + b)\r\n    }\r\n  }\r\n\r\n  const billCostRedce = () => {\r\n    if (activeUser.billCost.length !== 0) {\r\n      return activeUser.billCost.reduce((a, b) => a + b)\r\n    }\r\n  }\r\n\r\n  let monthlyBreakdownBills = {\r\n    labels: activeUser.billTitle,\r\n    datasets: [\r\n      {\r\n        label: \"Payment Titles\",\r\n        data: activeUser.billCost,\r\n        backgroundColor: shuffleArray(chartColors)\r\n      }\r\n    ]\r\n  };\r\n  let monthlyBreakdownGoals = {\r\n    labels: activeUser.goalTitle,\r\n    datasets: [\r\n      {\r\n        label: \"Goal Titles\",\r\n        data: activeUser.goalCost,\r\n        backgroundColor: shuffleArray(chartColors)\r\n      }\r\n    ]\r\n  };\r\n\r\n  let savingsData = {\r\n    labels: savingsLabel(savingCalculator(activeUser.billCost, activeUser.monthlyIncome)),\r\n    datasets: [\r\n      {\r\n        label: \"Payment Titles\",\r\n        data: savingsVerification(billCostRedce()),\r\n        backgroundColor: shuffleArray(chartColors)\r\n      }\r\n    ]\r\n  };\r\n\r\n  let goalData = {\r\n    labels: goalLabel(),\r\n    datasets: [\r\n      {\r\n        label: \"Goal Titles\",\r\n        data: savingsVerification(goalCostRedce()),\r\n        backgroundColor: shuffleArray(chartColors)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {(activeUser.billCost.length === 0 || activeUser.goalCost.length === 0) ? (\r\n        <div>\r\n          <h1>Please input either your monthly payments and/or any of your financial goals</h1>\r\n        </div>) : (\r\n          <div className=\"chart\">\r\n            <div className='pieChart'>\r\n              <Pie\r\n                data={monthlyBreakdownBills}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Monthly Payments By Bill\",\r\n                    fontSize: 25\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                  }\r\n                }}\r\n              />\r\n              <Pie\r\n                data={monthlyBreakdownGoals}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Goals Breakdown\",\r\n                    fontSize: 25\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='doughnutChart'>\r\n              <Doughnut\r\n                data={savingsData}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Expenses vs Savings\",\r\n                    fontSize: 25\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                  }\r\n                }}\r\n              />\r\n              <Doughnut\r\n                data={goalData}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Expected Goal Total vs Savings\",\r\n                    fontSize: 25\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Header from '../Components/header';\r\nimport Charts from '../Components/chart';\r\n\r\n\r\nconst ChartsPage = () => {\r\n    return ( \r\n        <div>\r\n        <Header type=\"charts\"/>\r\n        <Charts />\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default ChartsPage;","import React, { useState } from \"react\";\r\nimport { addPayment } from \"../Redux/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Bills = props => {\r\n  const initialState = {\r\n    billTitle: \"\",\r\n    billCost: \"\"\r\n  };\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const activeUserId = useSelector(state => state.activeUserId);\r\n  const activeUser = useSelector(state => state.activeUser);\r\n\r\n\r\n  const anotherBill = () => {\r\n    dispatch(addPayment(activeUserId, state.billTitle, +state.billCost));\r\n    setState({ ...state, billTitle: \"\", billCost: \"\" });\r\n  };\r\n\r\n  const onChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    anotherBill();\r\n    // dispatch(userSavings(activeUserId, activeUser.billCost, activeUser.monthlyIncome));\r\n    setState(initialState);\r\n    //Send user to enter goals if they have no goals filled out\r\n    if (activeUser.goalCost.length === 0){\r\n      props.history.push(\"/setmeupgoals\");\r\n    } else {\r\n      props.history.push(\"/table\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className='infoForm'>Monthly Payment</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Enter bill name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-billInfo\"\r\n            name=\"billTitle\"\r\n            value={state.billTitle}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Enter monthly bill cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-billInfo\"\r\n            name=\"billCost\"\r\n            value={state.billCost}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"btnBillTable\">\r\n          <div className=\"btnBillDiv\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={anotherBill}\r\n              disabled={state.billCost === \"\" || state.billTitle === ''} //disable until last form is filled\r\n            >\r\n              Another Payment\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-lg\"\r\n              disabled={state.billCost === \"\" || state.billTitle === ''} //disable until last form is filled\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Bills);","import React from \"react\";\r\nimport Header from \"../Components/header\";\r\nimport Bills from \"../Components/bills\";\r\n\r\nconst SetMeUpBillsPage = () => {\r\n  return (\r\n    <div>\r\n      <Header type=\"bills\" />\r\n      <Bills />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetMeUpBillsPage;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TableBtn = props => {\r\n  return (\r\n    <div className=\"containerUpdate\">\r\n      <div className=\"btnBillTable\">\r\n        <div className=\"btnBillDiv\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-lg\"\r\n            onClick={() => props.history.push(\"/setmeupbills\")}\r\n          >\r\n            Add Another Payment\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg\"\r\n            onClick={() => props.history.push(\"/setmeupgoals\")}\r\n          >\r\n            Add Financial Goals\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TableBtn);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteGoal, editGoal, updateGoal } from \"../../Redux/actions\";\r\n\r\nconst GoalTable = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const activeUser = useSelector(state => state.activeUser);\r\n  const updateUserGoal = useSelector(state => state.updateGoal);\r\n\r\n  const [disableSave, setDisableSave] = useState(false)\r\n\r\n  \r\n  const initialGoalState = {\r\n    index: -1,\r\n    goalTitle: '',\r\n    goalCost: ''\r\n  }\r\n  const [state, setState] = useState(initialGoalState);\r\n  useEffect(() => {\r\n    if (updateUserGoal.goalTitle) {\r\n      let goalTitle = updateUserGoal.goalTitle;\r\n      let goalCost = updateUserGoal.goalCost;\r\n      setState({\r\n        goalTitle,\r\n        goalCost\r\n      });\r\n    }\r\n  }, [updateUserGoal]);\r\n  const onGoalChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n    //Prevent user saving a blank billTitle on update form\r\n    let numVerification = (e.target.value)\r\n    if (numVerification === '') {\r\n      setDisableSave(true)\r\n    } else {\r\n      setDisableSave(false)\r\n    }\r\n  };\r\n  const onGoalSubmit = e => {\r\n    e.preventDefault();\r\n    let goal = {\r\n      goalTitle: state.goalTitle,\r\n      goalCost: +state.goalCost,\r\n      index: updateUserGoal.index\r\n    };\r\n    //Require user to input a valid number into goalCost input field\r\n    //And do not dispatch an update if user has only whitespace in goalTitle input field\r\n    if (isNaN(goal.goalCost) || goal.goalTitle.trim().length === 0) {\r\n      return;\r\n    } else {\r\n      dispatch(updateGoal(goal, activeUser.id));\r\n      setState(initialGoalState);\r\n    }\r\n    setHide(\"none\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const [hide, setHide] = useState(\"none\"); //Hide update form until edit is clicked\r\n  const [disable, setDisable] = useState(false); //Make edit and delete btn disabled when edit is clicked\r\n\r\n  //Reset disable and hide states when update form is canceled\r\n  const onCancel = e => {\r\n    e.preventDefault();\r\n    setHide(\"none\");\r\n    setDisable(false);\r\n  }\r\n\r\n\r\n  //Ternary operator to control table when goalCost is empty\r\n  return (\r\n    activeUser && (\r\n      <div className=\"col-md-6\">\r\n        <h1>{props.upperCaseName} Goals</h1>\r\n        {activeUser.goalCost.length > 0 ? (\r\n          <div>\r\n            <table className=\"table table-striped table-dark goalTable\">\r\n              <thead>\r\n                <tr className=\"tableHeader\">\r\n                  <th scope=\"col\">Financial Goals</th>\r\n                  <th scope=\"col\">Expected Cost</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {activeUser.goalTitle.map((title, index) => (\r\n                  <tr key={index}>\r\n                    <td>{title}</td>\r\n                    <td>{activeUser.goalCost[index]}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-primary btn-sm btn-edit\"\r\n                        disabled={disable}\r\n                        onClick={() => {\r\n                          dispatch(editGoal(title, activeUser.goalCost[index], index))\r\n                          setHide(\"inline\");\r\n                          setDisable(true);\r\n                        }} //Calling 2 function during the onClick\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        style={{ marginLeft: 2 }}\r\n                        className=\"btn btn-outline-danger btn-sm btn-delete\"\r\n                        disabled={disable}\r\n                        onClick={() => {\r\n                          dispatch(deleteGoal(activeUser.id, index));\r\n                        }}\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr className='lastRow'>\r\n                  <th scope=\"col\">Expected Goal Total:</th>\r\n                  <td style={{ color: \"green\" }}>\r\n                    ${activeUser.goalCost.reduce((a, b) => a + b)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <table className=\"table table-striped table-dark goalTable\">\r\n                <thead>\r\n                  <tr className=\"tableHeader\">\r\n                    <th scope=\"col\">Financial Goals</th>\r\n                    <th scope=\"col\">Expected Cost</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Expected Goal Total:</th>\r\n                    <td>$0</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        <div className=\"containerGoalForm\" style={{ display: hide }}>\r\n          <div className=\"goalUpdateFields\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-goalInfo update-form\"\r\n              name=\"goalTitle\"\r\n              placeholder=\"Edit Goal Title\"\r\n              value={state.goalTitle}\r\n              onChange={onGoalChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-goalInfo update-form\"\r\n              name=\"goalCost\"\r\n              placeholder=\"Edit Goal Cost\"\r\n              value={state.goalCost}\r\n              onChange={onGoalChange}\r\n            />\r\n          </div>\r\n\r\n          <div className='btnEditForm'>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn btn-success btn-md\"\r\n              onClick={onGoalSubmit}\r\n              disabled={disableSave}\r\n            >\r\n              Save\r\n          </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn btn-success btn-md btn-cancel\"\r\n              onClick={onCancel}\r\n            >\r\n              Cancel\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default GoalTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TableBtn from \"./tableBtn\";\r\nimport GoalsTable from \"./goalTable\";\r\nimport { editBill, deleteBill, updateBill } from \"../../Redux/actions\";\r\n\r\nconst SetUpTable = () => { \r\n\r\n  const dispatch = useDispatch();\r\n  const activeUser = useSelector(state => state.activeUser);\r\n  const updateUserBill = useSelector(state => state.updateBill);\r\n\r\n  const [hide, setHide] = useState(\"none\"); //Hide update form until edit is clicked\r\n  const [disable, setDisable] = useState(false); //Make edit and delete btn disabled when edit is clicked\r\n  const [disableSave, setDisableSave] = useState(false)\r\n\r\n  //Updating bill information\r\n  const initialStateBill = {\r\n    index: -1,\r\n    billTitle: \"\",\r\n    billCost: \"\"\r\n  };\r\n  const [state, setState] = useState(initialStateBill);\r\n  useEffect(() => {\r\n    if (updateUserBill.billTitle) {\r\n      let billTitle = updateUserBill.billTitle;\r\n      let billCost = updateUserBill.billCost;\r\n      setState({\r\n        billTitle,\r\n        billCost\r\n      });\r\n    }\r\n  }, [updateUserBill]);\r\n  const onBillChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n    //Prevent user saving a blank billTitle on update form\r\n    let numVerification = (e.target.value)\r\n    if (numVerification === '') {\r\n      setDisableSave(true)\r\n    } else {\r\n      setDisableSave(false)\r\n    }\r\n  };\r\n  const onBillSubmit = e => {\r\n    e.preventDefault();\r\n    let bill = {\r\n      billTitle: state.billTitle,\r\n      billCost: +state.billCost,\r\n      index: updateUserBill.index\r\n    };\r\n    //Require user to input a valid number into billCost input field \r\n    //And do not dispatch an update if user has only whitespace in billTitle input field\r\n    if (isNaN(bill.billCost) || bill.billTitle.trim().length === 0) {\r\n      return;\r\n    }\r\n    else {\r\n      dispatch(updateBill(bill, activeUser.id));\r\n      setState(initialStateBill);\r\n    }\r\n    setHide(\"none\");\r\n    setDisable(false);\r\n  };\r\n\r\n  //Reset disable and hide states when update form is canceled\r\n  const onCancel = e => {\r\n    e.preventDefault();\r\n    setHide(\"none\");\r\n    setDisable(false);\r\n  }\r\n\r\n  //Uppercase the user first and last name\r\n  const upperCaseName = str => {\r\n    let lowerCaseStr = str.toLowerCase().trim();\r\n    return lowerCaseStr.split(' ').map(s => s[0].toUpperCase() + s.slice(1).toLowerCase()).join(' ')\r\n  }\r\n\r\n  //Calculate monthly savings\r\n  const savingCalculator = (spending, income) => {\r\n    if (activeUser.billCost.length !== 0) {\r\n      let totalMonthlyExpenses = spending.reduce((a, b) => a + b);\r\n      let monthlySavings = income - totalMonthlyExpenses;\r\n      return monthlySavings;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    //Run this return only when user has data\r\n    activeUser && (\r\n      <div>\r\n        <div className=\"tables\">\r\n          <div className=\"col-md-6\">\r\n            <h1>{upperCaseName(activeUser.name)} Bills</h1>\r\n            {activeUser.billCost.length !== 0 ? (\r\n              <div>\r\n                <table className=\"table table-striped table-dark\">\r\n                  <thead>\r\n                    <tr className=\"tableHeader\">\r\n                      <th scope=\"col\">Payment Title</th>\r\n                      <th scope=\"col\">Payment Cost</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {activeUser.billTitle.map((title, index) => (\r\n                      <tr key={index}>\r\n                        <td>{title}</td>\r\n                        <td>{activeUser.billCost[index]}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-outline-primary btn-sm btn-edit\"\r\n                            disabled={disable}\r\n                            onClick={() => {\r\n                              // props.onEdit(title, user.billCost[index], index);\r\n                              dispatch(editBill(title, activeUser.billCost[index], index))\r\n                              setHide(\"inline\");\r\n                              setDisable(true);\r\n                            }} //Calling 2 function during the onClick\r\n                          >\r\n                            Edit\r\n                      </button>\r\n                          <button\r\n                            style={{ marginLeft: 2 }}\r\n                            disabled={disable}\r\n                            className=\"btn btn-outline-danger btn-sm btn-delete\"\r\n                            onClick={() => {\r\n                              dispatch(deleteBill(activeUser.id, index));\r\n                            }}\r\n                          >\r\n                            X\r\n                      </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                    <tr className='lastRow'>\r\n                      <th scope=\"col\">Total Monthly Payments:</th>\r\n                      <td style={{ color: \"red\" }}>\r\n                        ${activeUser.billCost.reduce((a, b) => a + b)}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ) : (\r\n                <div>\r\n                  <table className=\"table table-striped table-dark\">\r\n                    <thead>\r\n                      <tr className=\"tableHeader\">\r\n                        <th scope=\"col\">Payment Title</th>\r\n                        <th scope=\"col\">Payment Cost</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>0</td>\r\n                        <td>0</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"col\">Total Monthly Payments:</th>\r\n                        <td>\r\n                          $0\r\n                  </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            <div className='updateForms'>\r\n              <div className=\"containerGoalForm\" style={{ display: hide }}>\r\n                <div className=\"goalUpdateFields\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-goalInfo update-form\"\r\n                    name=\"billTitle\"\r\n                    placeholder=\"Edit Goal Title\"\r\n                    value={state.billTitle}\r\n                    onChange={onBillChange}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-goalInfo update-form\"\r\n                    name=\"billCost\"\r\n                    placeholder=\"Edit Goal Cost\"\r\n                    value={state.billCost}\r\n                    onChange={onBillChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='btnEditForm'>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn btn-success btn-md\"\r\n                    onClick={onBillSubmit}\r\n                    disabled={disableSave}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn btn-success btn-md btn-cancel\"\r\n                    onClick={onCancel}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <GoalsTable upperCaseName={upperCaseName(activeUser.name)} />\r\n        </div>\r\n        <div className='incomeSavingsSummary'>\r\n          <h4>Total Monthly Income: ${activeUser.monthlyIncome}</h4>\r\n          <h4>Total Monthly Savings: ${savingCalculator(activeUser.billCost, activeUser.monthlyIncome)}</h4>\r\n        </div>\r\n        <TableBtn />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default SetUpTable;","import React from \"react\";\r\nimport Header from \"../Components/header\";\r\nimport BillTable from \"../Components/Table/Table\";\r\n\r\nconst BillTablesPage = () => {\r\n  return (\r\n    <div>\r\n      <Header type=\"bill_table\" />\r\n      <BillTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillTablesPage;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addGoals } from \"../Redux/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Goals = props => {\r\n  const initialState = {\r\n    goalTitle: \"\",\r\n    goalCost: \"\"\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n  const activeUser = useSelector(state => state.activeUser);\r\n\r\n  const anotherGoal = () => {\r\n    dispatch(addGoals(state.goalTitle, +state.goalCost, activeUser.id));\r\n    setState({ ...state, goalTitle: \"\", goalCost: \"\" });\r\n  };\r\n\r\n  const onChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    anotherGoal();\r\n    setState(initialState);\r\n    if (activeUser.billCost.length === 0){\r\n      props.history.push(\"/setmeupbills\");\r\n    } else {\r\n      props.history.push(\"/table\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className='infoForm'>Financial Goals</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Enter financial goal name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-billInfo\"\r\n            name=\"goalTitle\"\r\n            value={state.goalTitle}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Enter expected financial goal cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-billInfo\"\r\n            name=\"goalCost\"\r\n            value={state.goalCost}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"btnBillTable\">\r\n          <div className=\"btnBillDiv\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={anotherGoal}\r\n              disabled={state.goalCost === \"\" || state.goalTitle === \"\"} //disable until last form is filled\r\n            >\r\n              Another Goal\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-lg\"\r\n              disabled={state.goalCost === \"\" || state.goalTitle === \"\"} //disable until last form is filled\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Goals);","import React from \"react\";\r\nimport Header from '../Components/header';\r\nimport Goals from '../Components/goals'\r\n\r\nconst GoalPage = () => {\r\n  return (\r\n    <div>\r\n      <Header type=\"goals\" />\r\n      <Goals />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// import SetUp from \"./Components/Home\";\nimport SetUpPages from \"./Pages/SetUpPage\";\nimport Chart from './Pages/ChartsPage';\nimport Bills from \"./Pages/SetmeUpBillsPage\";\nimport Table from './Pages/TablesPage';\nimport Goals from './Pages/Goalpage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={SetUpPages} />\n        <Route path=\"/myCharts\" component={Chart} />\n        <Route path=\"/setmeupbills\" component={Bills}/>\n        <Route path=\"/table\" component={Table}/>\n        <Route path=\"/setmeupgoals\" component={Goals} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_USER,\r\n  FETCH_USER,\r\n  EDIT_BILL,\r\n  DELETE_BILL,\r\n  ADD_PAYMENT,\r\n  UPDATE_BILL,\r\n  USER_GOALS,\r\n  DELETE_GOAL,\r\n  EDIT_GOAL,\r\n  UPDATE_GOAL\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  activeUserId: \"\",\r\n  activeUser: null,\r\n  updateBill: {},\r\n  updateGoal: {}\r\n};\r\n\r\n//Helper function to update billTitle and billCost for ADD_USER action.type\r\nconst updateUserBills = (state, id, title, cost) => {\r\n  let copy = [...state.users];\r\n  let index = copy.findIndex(x => x.id === id);\r\n  if (index !== -1) {\r\n    copy[index].billTitle.push(\r\n      title[0].toUpperCase() + title.slice(1).toLowerCase()\r\n    );\r\n    copy[index].billCost.push(+cost.toFixed(2));\r\n  }\r\n  return copy;\r\n};\r\n\r\nconst updateUserGoals = (state, id, title, cost) => {\r\n  let userGoalCopy = [...state.users];\r\n  let index = state.users.findIndex(x => x.id === id);\r\n  if (index !== -1) {\r\n    userGoalCopy[index].goalTitle.push(\r\n      title[0].toUpperCase() + title.slice(1).toLowerCase()\r\n    );\r\n    userGoalCopy[index].goalCost.push(+cost.toFixed(2));\r\n  }\r\n  return userGoalCopy;\r\n};\r\n\r\nconst savingCalculator = (state, id, cost, income) => {\r\n  let userSavingsCopy = [...state.users];\r\n  let index = state.users.findIndex(x => x.id === id);\r\n  let totalMonthlyExpenses = cost.reduce((a, b) => a + b);\r\n  let monthlySavings = income - totalMonthlyExpenses;\r\n  userSavingsCopy[index].savings = monthlySavings;\r\n  return userSavingsCopy;\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  let index;\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      return {\r\n        ...state, //Copy State\r\n        users: [...state.users, action.newUser], //Update copied state\r\n        activeUserId: action.newUser.id,\r\n        activeUser: action.newUser\r\n      };\r\n\r\n    //To update billTitle and/or billCost\r\n    case ADD_PAYMENT:\r\n      return {\r\n        ...state,\r\n        users: updateUserBills(state, action.id, action.title, action.cost)\r\n      };\r\n\r\n    case FETCH_USER:\r\n      index = state.users.findIndex(x => x.id === action.UserId);\r\n      return {\r\n        ...state,\r\n        activeUser: state.users[index]\r\n      };\r\n\r\n    case DELETE_BILL:\r\n      /*let usersCopy = [...state.users]; this is a shallow copy of the state.\r\n      Because the copy I needed was an array inside another array, I needed a deep copy of state.users.\r\n      JSON.stringify creates a deep copy and allows the delete button to re-render the page on './billreview*/\r\n      let usersCopy = JSON.parse(JSON.stringify(state.users)); //Deep Copy\r\n      index = state.users.findIndex(x => x.id === action.UserId);\r\n      usersCopy[index].billTitle.splice(action.billTitleIndex, 1);\r\n      usersCopy[index].billCost.splice(action.billTitleIndex, 1);\r\n      return {\r\n        ...state,\r\n        users: usersCopy,\r\n        activeUser: usersCopy[index]\r\n      };\r\n\r\n    case EDIT_BILL:\r\n      let billTitle = action.title;\r\n      let billCost = action.cost;\r\n      index = action.index;\r\n      return {\r\n        ...state,\r\n        updateBill: { billTitle, billCost, index }\r\n      };\r\n\r\n    case UPDATE_BILL:\r\n      let updateBillCopy = [...state.users];\r\n      index = state.users.findIndex(x => x.id === action.UserId);\r\n      updateBillCopy[index].billTitle.splice(action.bill.index, 1, action.bill.billTitle[0].toUpperCase() + action.bill.billTitle.slice(1).toLowerCase());\r\n      updateBillCopy[index].billCost.splice(action.bill.index, 1, +action.bill.billCost.toFixed(2));\r\n      return {\r\n        ...state,\r\n        users: updateBillCopy\r\n      };\r\n\r\n    case USER_GOALS:\r\n      return {\r\n        ...state,\r\n        users: updateUserGoals(state, action.id, action.title, action.cost)\r\n      };\r\n\r\n    case DELETE_GOAL:\r\n      /*let usersCopy = [...state.users]; this is a shallow copy of the state.\r\n        Because the copy I needed was an array inside another array, I needed a deep copy of state.users.\r\n        JSON.stringify creates a deep copy and allows the delete button to re-render the page on './billreview*/\r\n      let usersDeleteGoalCopy = JSON.parse(JSON.stringify(state.users)); //Deep Copy\r\n      index = state.users.findIndex(x => x.id === action.UserId);\r\n      usersDeleteGoalCopy[index].goalTitle.splice(action.goalTitleIndex, 1);\r\n      usersDeleteGoalCopy[index].goalCost.splice(action.goalTitleIndex, 1);\r\n      return {\r\n        ...state,\r\n        users: usersDeleteGoalCopy,\r\n        activeUser: usersDeleteGoalCopy[index]\r\n      };\r\n\r\n      case EDIT_GOAL:\r\n        let goalTitle = action.title;\r\n        let goalCost = action.cost;\r\n        index = action.index;\r\n        return {\r\n          ...state,\r\n          updateGoal: { goalTitle, goalCost, index }\r\n        };\r\n\r\n      case UPDATE_GOAL:\r\n        let updateGoalCopy = [...state.users];\r\n        index = state.users.findIndex(x => x.id === action.UserId);\r\n        updateGoalCopy[index].goalTitle.splice(action.goal.index, 1, action.goal.goalTitle[0].toUpperCase() + action.goal.goalTitle.slice(1).toLowerCase());\r\n        updateGoalCopy[index].goalCost.splice(action.goal.index,1,+action.goal.goalCost.toFixed(2));\r\n        return {\r\n          ...state,\r\n          users: updateGoalCopy\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from 'redux';\nimport reducer from './Redux/reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename='/Budget'>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}